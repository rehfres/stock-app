{"version":3,"sources":["draw.js","timeToSeconds.js","Socket.js","Stock.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["canvasWidth","canvasHeight","coefTimeToCanvas","fillChart","sign","context","previousClose","save","clip","fillStyle","fillRect","restore","timeToSeconds","time","toString","includes","Date","toISOString","split","slice","coef","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","socket","io","console","log","on","Stock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","prices","pricesModifiedForCanvas","counter","previousCloseModifiedForCanvas","priceMin","priceMax","coefPricesToCanvas","webSocketsMessagesCounter","canvas","React","createRef","getDataAndMakeChart","bind","assertThisInitialized","makeChart","draw","setPreviousClose","modifyEverythingForCanvas","getPricesMaxMinAndCanvasCoef","fetch","symbol","then","response","json","chartData","chartDataDay","chartDataMonth","dateToday","now","replace","chardDataDayReturnsYesterday","length","date","objToGetPreviousCloseFrom","close","setState","objectSpread","simplePrices","minuteData","price","marketClose","push","timeInSeconds","minute","Math","max","apply","concat","min","_this2","positive","negative","lastData","index","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","priceObj","modifyTimeForCanvas","_arr","_i","current","scale","window","devicePixelRatio","height","width","getContext","clearRect","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawPreviousCloseLine","_ref2","drawChart","_this3","message","JSON","parse","mergeSocketDataToPrices","lastLocalPriceTime","lastLocalPrice","messageTime","timeEnd","pricesNew","stringify","lastSign","_arr2","_i2","_this4","Big","DP","emit","onSocketMessage","lastPrice","absoluteChange","minus","percentageChange","times","div","react_default","a","createElement","className","ref","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","settings","timestampsInSnapshots","userId","provider","GoogleAuthProvider","App","search","symbolsListActive","symbolsList","searchList","reorderCharts","r","map","el","collection","doc","get","data","symbols","set","merge","event","target","toUpperCase","filter","startsWith","some","update","FieldValue","arrayUnion","addSymbolToDb","dragResult","removedIndex","addedIndex","symbolsInNewOrder","removedChartSymbol","splice","signInWithPopup","user","uid","catch","error","alert","getSymbolsListActive","getSymbolsList","type","placeholder","onChange","key","onMouseDown","tryToAddSymbolChart","dist","onDrop","src_Stock_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b9a5d4a.chunk.js","sourcesContent":["var canvasWidth = 100, canvasHeight = 35, secondsInaDay = 6 * 60 * 60 + 30 * 60;\r\nvar coefTimeToCanvas = canvasWidth / secondsInaDay;\r\n\r\nexport function drawPreviousCloseLine(context, previousClose) {\r\n  // previousClose = canvasHeight / 2;\r\n  context.beginPath();\r\n  context.moveTo(0, canvasHeight - previousClose);\r\n  context.lineTo(canvasWidth, canvasHeight - previousClose);\r\n  context.lineWidth = 1;\r\n  context.strokeStyle = '#0000001a';\r\n  context.stroke();\r\n}\r\n\r\nexport function drawChart(context, prices, previousClose) {\r\n  // previousClose = canvasHeight / 2;\r\n  // console.log('%c⧭', 'color: #a66037', prices);\r\n  // console.time(1)\r\n  for (const sign of ['positive', 'negative']) {\r\n    let lastData = {\r\n      index: null,\r\n      time: null\r\n    }\r\n    context.beginPath();\r\n    context.moveTo(0, canvasHeight - previousClose);\r\n    for (const { index, timeInSeconds, price } of prices[sign]) {\r\n      const lineOrMoveTo = (index - lastData.index > 1) ? 'moveTo' : 'lineTo'\r\n      // console.log('%c⧭', sign === 'positive' ? 'color: #16c774' : 'color: #c71f16', index, timeInSeconds, price, sign, lineOrMoveTo);\r\n      context[lineOrMoveTo](timeInSeconds * coefTimeToCanvas, canvasHeight - price);\r\n      lastData.time = timeInSeconds;\r\n      lastData.index = index;\r\n    }\r\n    context.lineWidth = 1;\r\n    context.strokeStyle = sign === 'positive'? 'green' : 'red';\r\n    context.stroke();\r\n    context.lineTo(lastData.time * coefTimeToCanvas, canvasHeight - previousClose);\r\n    fillChart(sign, context, previousClose);\r\n  }\r\n  // console.timeEnd(1)\r\n}\r\n\r\nfunction fillChart(sign, context, previousClose) {\r\n  // previousClose = canvasHeight / 2;\r\n  context.save();\r\n  context.clip();\r\n  if (sign === 'positive') {\r\n    context.fillStyle = '#ccebd6';\r\n    context.fillRect(0, 0, canvasWidth, canvasHeight - previousClose);\r\n  } else {\r\n    context.fillStyle = '#ffd6d8';\r\n    context.fillRect(0, canvasHeight - previousClose, canvasWidth, canvasHeight);\r\n  }\r\n  context.restore();\r\n}","export default function timeToSeconds(time) {\r\n  time = time.toString();\r\n  if (typeof time !== 'string' || !time.includes(':')) {\r\n    // console.log('%c⧭', 'color: #c71f16', time);\r\n    time = time - 5 * 3600 * 1000; // utc to est\r\n    time = new Date(+time).toISOString().split('T')[1].slice(0, -1);\r\n  }\r\n  let coef = 3600\r\n  let result = null\r\n  for (const number of time.split('.')[0].split(':')) {\r\n    result += number * coef;\r\n    coef = coef / 60;\r\n  }\r\n  return result;\r\n}","import io from 'socket.io-client';\r\nimport timeToSeconds from './timeToSeconds.js';\r\n\r\nexport const socket = io('https://ws-api.iextrading.com/1.0/last');\r\n\r\nconsole.log('%c⧭', 'color: #16a9c7', socket);\r\n// socket.on('message', message => {\r\n//   message = JSON.parse(message);\r\n//   const symbol = message.symbol;\r\n//   console.log(message);\r\n//   if (symbolsActiveData.hasOwnProperty(symbol)) {\r\n//     symbolsActiveData[symbol] = {\r\n//       price: message.price,\r\n//       time: timeToSeconds(message.time)\r\n//     };\r\n//   }\r\n//   console.log('%c⧭⧭⧭', 'color: #c716a1', symbolsActiveData);\r\n// })\r\nsocket.on('connect', () => {\r\n  console.log('%c%s', 'color: #c76f16', 'connect');\r\n})\r\n// socket.on('disconnect', () => console.log('Disconnected.'))\r\n\r\nexport const symbolsActiveData = {}\r\n\r\nexport function startGettingSymbolData(symbol) {\r\n  // symbolsActiveData[symbol] = {};\r\n  socket.emit('subscribe', symbol);\r\n  console.log('%c%s', 'color: #c716a1', symbol + ' subbed');\r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './Stock.css';\nimport { drawPreviousCloseLine, drawChart } from './draw.js';\nimport timeToSeconds from './timeToSeconds.js';\nimport Big from 'big.js';\nimport { socket, startGettingSymbolData } from './Socket';\n\nclass Stock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prices: [],\n      pricesModifiedForCanvas: [],\n      counter: 0,\n      previousClose: null,\n      previousCloseModifiedForCanvas: null,\n      priceMin: null,\n      priceMax: null,\n      coefPricesToCanvas: null,\n      webSocketsMessagesCounter: 0\n    };\n    this.canvas = React.createRef();\n    this.getDataAndMakeChart = this.getDataAndMakeChart.bind(this);\n    this.makeChart = this.makeChart.bind(this);\n    this.draw = this.draw.bind(this);\n    this.setPreviousClose = this.setPreviousClose.bind(this);\n    this.modifyEverythingForCanvas = this.modifyEverythingForCanvas.bind(this);\n    this.getPricesMaxMinAndCanvasCoef = this.getPricesMaxMinAndCanvasCoef.bind(this);\n  }\n  async getDataAndMakeChart() {\n    const chartData = await fetch('https://api.iextrading.com/1.0/stock/' + this.props.symbol + '/chart/1d')\n      .then(response => response.json());\n    return this.makeChart(chartData);\n    // console.log('%c⧭', 'color: #c74b16', chartData);\n  }\n  // async updateChart() {\n  //   const newChartData = await fetch('https://api.iextrading.com/1.0/stock/' + this.props.symbol + '/chart/1d?chartLast=5')\n  //     .then(response => response.json());\n    \n  // }\n  async makeChart(chartDataDay) {\n    await this.setPreviousClose(chartDataDay);\n    this.getPricesMaxMinAndCanvasCoef(chartDataDay);\n    this.modifyEverythingForCanvas();\n    return this.draw();\n  }\n  async setPreviousClose(chartDataDay) {\n    const chartDataMonth = await fetch('https://api.iextrading.com/1.0/stock/' + this.props.symbol + '/chart/1m')\n      .then(response => response.json());\n    const dateToday = new Date(Date.now() - 864e5).toISOString().split('T')[0].replace(/-/g,'');\n    const chardDataDayReturnsYesterday = dateToday === chartDataDay[chartDataDay.length - 1].date;\n    const objToGetPreviousCloseFrom = chartDataMonth[chartDataMonth.length - (chardDataDayReturnsYesterday ? 2 : 1)];\n    const previousClose = objToGetPreviousCloseFrom.close;\n    // console.log('%c⧭', 'color: #c79816', `${this.props.symbol}, pC:${previousClose}`);\n    this.setState(state => ({...state, previousClose}));\n  }\n  getPricesMaxMinAndCanvasCoef(chartDataDay) {\n    const prices = [], simplePrices = [];\n    // let lastPrice = null;\n    // const lastLocalPriceTimeInSeconds = this.state.prices.legth ? this.state.prices[this.state.prices.length - 1].timeInSeconds : 0\n    for (const minuteData of chartDataDay) {\n      const price = minuteData.close || minuteData.marketClose;\n      if (price) {\n        prices.push({\n          price,\n          timeInSeconds: timeToSeconds(minuteData.minute)\n        });\n        simplePrices.push(price);\n      }\n      // lastPrice = price;\n      // console.log('%c⧭', 'color: #c71f16', timeToSeconds(minuteData.minute), lastLocalPricetimeInSeconds);\n    }\n    // console.log('%c⧭', 'color: #2516c7', prices);\n    this.setState(state => ({...state, prices}));\n    const priceMax = Math.max(...simplePrices, this.state.previousClose);\n    const priceMin = Math.min(...simplePrices, this.state.previousClose);\n    this.setState(state => ({...state, priceMax}));\n    this.setState(state => ({...state, priceMin}));\n    // console.log('%c⧭', 'color: #c7c116', ...simplePrices, this.state.previousClose);\n    const coefPricesToCanvas = 35 /*canvas height */ / (priceMax - priceMin);\n    this.setState(state => ({...state, coefPricesToCanvas}));\n  }\n  modifyEverythingForCanvas() {\n    this.setState(state => ({...state, previousCloseModifiedForCanvas: (state.previousClose - this.state.priceMin) * this.state.coefPricesToCanvas}));\n    // console.log('%c⧭', 'color: #b8ca10', this.state.previousCloseModifiedForCanvas);\n    const pricesModifiedForCanvas = {\n      positive: [],\n      negative: []\n    };\n    let lastData = {\n      sign: null,\n      time: null\n    }\n    let index = 0;\n    // this.setState(state => ({...state, previousClose: state.priceMin + (state.priceMax - state.priceMin) / 2}));\n    for (const priceObj of this.state.prices) {\n      const price = priceObj.price;\n      const timeInSeconds = this.modifyTimeForCanvas(priceObj.timeInSeconds);\n      const sign = price >= this.state.previousClose ? 'positive' : 'negative';\n      if (lastData.sign !== sign && lastData.sign !== null) {\n        for (const temp of [lastData.sign, sign]) {\n          pricesModifiedForCanvas[temp].push({\n            timeInSeconds: (timeInSeconds + lastData.time) / 2, // average time\n            price: this.state.previousCloseModifiedForCanvas,\n            index\n          });\n          // console.log('%c⧭', 'color: #c74b16', timeInSeconds, lastData.time, index);          \n          index++;\n        }\n      }\n      pricesModifiedForCanvas[sign].push({\n        timeInSeconds,\n        price: (price - this.state.priceMin) * this.state.coefPricesToCanvas,\n        index\n      });\n      lastData.sign = sign;\n      lastData.time = timeInSeconds;\n      index++;\n    }\n    this.setState(state => ({...state, pricesModifiedForCanvas}));\n    // console.log('%c', 'color: #86c716', this.state.pricesModifiedForCanvas);\n  }\n  draw() {\n    const canvas = this.canvas.current;\n    const scale = window.devicePixelRatio;\n    canvas.height = canvas.height * scale;\n    canvas.width = canvas.width * scale;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawPreviousCloseLine(context, this.state.previousCloseModifiedForCanvas);\n    drawChart(context, this.state.pricesModifiedForCanvas, this.state.previousCloseModifiedForCanvas);\n    // fillChart(context, this.state.previousCloseModifiedForCanvas);\n  }\n  onSocketMessage() {\n    socket.on('message', message => {\n      message = JSON.parse(message);\n      if (message.symbol !== this.props.symbol) return;\n      // console.log(message);\n      this.mergeSocketDataToPrices(message);\n      this.draw();\n      // symbolsActiveData[symbol] = {\n      //   price: message.price,\n      //   time: timeToSeconds(message.time)\n      // };\n    })\n  }\n  mergeSocketDataToPrices(message) {\n    this.setState(state => ({...state, webSocketsMessagesCounter: state.webSocketsMessagesCounter + 1}));\n    const lastLocalPriceTime = this.state.prices[this.state.prices.length - 1].timeInSeconds;\n    const lastLocalPrice = this.state.prices[this.state.prices.length - 1].price;\n    const messageTime = timeToSeconds(message.time)\n    // console.log('%c⧭', 'color: #16c79e', lastLocalPriceTime, messageTime);\n    console.time(1)\n    if (messageTime < lastLocalPriceTime || this.state.webSocketsMessagesCounter < 2) {\n      console.timeEnd(1)\n      return\n    }\n    console.timeEnd(1)\n\n    // to this.state.prices:\n    // console.log('%c⧭1', 'color: #c7166f', this.state.prices);\n    const pricesNew = this.state.prices.concat([{\n      price: message.price,\n      timeInSeconds: messageTime\n    }])\n    this.setState(state => ({...state, prices: pricesNew}));\n    // console.log('%c⧭2', 'color: #c7166f', this.state.prices, this.state.pricesModifiedForCanvas);\n\n    // to this.state.priceMin/priceMax/coefPricesToCanvas:\n    this.setState(state => ({...state, priceMax: Math.max(state.priceMax, message.price)}));\n    this.setState(state => ({...state, priceMin: Math.min(state.priceMin, message.price)}));\n    this.setState(state => ({...state, coefPricesToCanvas: 35 /*canvas height */ / (state.priceMax - state.priceMin)}));\n\n    // to this.state.pricesModifiedForCanvas:\n    const pricesModifiedForCanvas = JSON.parse(JSON.stringify(this.state.pricesModifiedForCanvas));\n    const sign = message.price >= this.state.previousClose ? 'positive' : 'negative';\n    const lastSign = lastLocalPrice >= this.state.previousClose ? 'positive' : 'negative';\n    let index = this.state.pricesModifiedForCanvas[lastSign][this.state.pricesModifiedForCanvas[lastSign].length - 1].index + 1\n    if (lastSign !== sign) {\n      for (const temp of [lastSign, sign]) {\n        pricesModifiedForCanvas[temp].push({\n          timeInSeconds: this.modifyTimeForCanvas((messageTime + lastLocalPriceTime) / 2), // average time modified for canvas\n          price: this.state.previousCloseModifiedForCanvas,\n          index\n        });\n        index++;\n      }\n    }\n    pricesModifiedForCanvas[sign].push({\n      timeInSeconds: this.modifyTimeForCanvas(messageTime),\n      price: (message.price - this.state.priceMin) * this.state.coefPricesToCanvas,\n      index\n    });\n    this.setState(state => ({...state, pricesModifiedForCanvas}));\n    // console.log('%c', 'color: #86c716', this.state.pricesModifiedForCanvas);\n  }\n  modifyTimeForCanvas(timeInSeconds) {\n    return timeInSeconds - (9 * 60 * 60 + 30 * 60);\n  }\n  componentDidMount() {\n    Big.DP = 2;\n    this.getDataAndMakeChart().then(() => {\n      startGettingSymbolData(this.props.symbol);\n      this.onSocketMessage();\n    })\n  }\n  render() {\n    if (!this.state.prices.length) return null;\n    const lastPrice = this.state.prices[this.state.prices.length - 1].price;\n    // console.log('%c⧭', 'color: #c7166f', lastPrice);\n    const absoluteChange = Big(lastPrice).minus(this.state.previousClose).toString();\n    const percentageChange = Big(lastPrice).times(100).div(this.state.previousClose).minus(100).toString();\n    // console.log('%c⧭', 'color: #c71f16', lastPrice.toString(), this.state.previousClose);\n    return (\n      <div className=\"chart\">\n        <div className=\"text\">\n          <p className=\"symbol\">{this.props.symbol}</p>\n          <p className=\"price\">{lastPrice}</p>\n          <p className={'change ' + (absoluteChange >= 0 ? 'positive' : 'negative')}>{absoluteChange} ({percentageChange}%)</p>\n        </div>\n        <canvas ref={this.canvas} width=\"100\" height=\"35\"></canvas>\n      </div>\n    );\n  }\n}\n\nexport default Stock;\n","import * as firebase from 'firebase';\r\n// import 'firebase/auth';\r\n// import 'firebase/database';\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyDVs10hAUStxGmb_TxSEIR7iW78NyqwVKE\",\r\n  authDomain: \"stock-app-b7556.firebaseapp.com\",\r\n  databaseURL: \"https://stock-app-b7556.firebaseio.com\",\r\n  projectId: \"stock-app-b7556\",\r\n  storageBucket: \"stock-app-b7556.appspot.com\",\r\n  messagingSenderId: \"174869200663\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nvar db = firebase.firestore();\r\ndb.settings({timestampsInSnapshots: true});\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\nvar userId;\r\n\r\nexport function auth() {\r\n  return firebase.auth().signInWithPopup(provider).then(result => {\r\n    userId = result.user.uid;\r\n  }).catch(error => {\r\n    console.log(error);\r\n    alert(error.message);\r\n  });\r\n}\r\n\r\nexport function getSymbolsFromDb() {\r\n  return db.collection(\"users\").doc(userId).get().then(doc => {\r\n    const data = doc.data();\r\n    if (data) {\r\n      return data.symbols;\r\n    } else {\r\n      return db.collection(\"users\").doc(userId).set({\r\n        symbols: []\r\n      }, { merge: true }).then(() => ([]));\r\n    }\r\n  });\r\n}\r\n\r\nexport function reorderSymbolsInDb(symbolsInNewOrder) {\r\n  return db.collection(\"users\").doc(userId).update({\r\n    symbols: symbolsInNewOrder\r\n  });\r\n}\r\n\r\nexport function addSymbolToDb(symbol) {\r\n  return db.collection(\"users\").doc(userId).update({\r\n    symbols: firebase.firestore.FieldValue.arrayUnion(symbol)\r\n  });\r\n}\r\n\r\nexport function deleteSymbolFromDb(symbol) {\r\n  return db.collection(\"users\").doc(userId).update({\r\n    symbols: firebase.firestore.FieldValue.arrayRemove(symbol)\r\n  });\r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport Stock from './Stock';\nimport './App.css';\nimport { auth, getSymbolsFromDb, addSymbolToDb, deleteSymbolFromDb, reorderSymbolsInDb } from './firebase';\nimport { Container, Draggable } from 'react-smooth-dnd';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: 'SNAP',\n      symbolsListActive: [],\n      symbolsList: [],\n      searchList: []\n    };\n    this.search = this.search.bind(this);\n    this.reorderCharts = this.reorderCharts.bind(this);\n  }\n  handleClick() {\n    console.log(this.state.counter);\n    this.setState(state => ({ counter: state.counter + 1 }));\n  }\n  getSymbolsList() {\n    return fetch('https://api.iextrading.com/1.0/ref-data/symbols?filter=symbol')\n      .then(response => response.json())\n      .then(r => {\n        this.setState(state => ({...state, symbolsList: r.map(el => el.symbol)}));\n        this.setState(state => ({...state, searchList: state.symbolsList}));\n      })\n  }\n  async getSymbolsListActive() {\n    const symbolsListActive = await getSymbolsFromDb();\n    console.log('%c⧭', 'color: #2516c7', symbolsListActive);\n    this.setState(state => ({...state, symbolsListActive}));\n    console.log('%c⧭', 'color: #c76f16', this.state.symbolsListActive);\n  }\n  search(event) {\n    const search = (event.target ? event.target.value : event).toUpperCase();\n    this.setState(state => ({...state, search}));\n    const searchList = this.state.symbolsList.filter(el => el.startsWith(search)) || [];\n    this.setState(state => ({...state, searchList: searchList}));\n  }\n  tryToAddSymbolChart(symbol) {\n    if (!this.state.symbolsListActive.some(el => el === symbol)) {\n      this.setState(state => ({...state, symbolsListActive: state.symbolsListActive.concat([symbol])}));\n      return addSymbolToDb(symbol);\n    }\n  }\n  reorderCharts(dragResult) {\n    console.log('%c⧭', 'color: #6c16c7', dragResult);\n    console.log('%c⧭', 'color: #c76f16', this.state.symbolsListActive);\n    const { removedIndex, addedIndex } = dragResult;\n    if (removedIndex === addedIndex) return\n    const symbolsListActive = this.state.symbolsListActive.slice();\n    const removedChartSymbol = symbolsListActive.splice(removedIndex, 1)[0]\n    symbolsListActive.splice(addedIndex, 0, removedChartSymbol);\n    console.log('%c⧭', 'color: #1663c7', symbolsListActive);\n    this.setState(state => ({...state, symbolsListActive}));\n    reorderSymbolsInDb(symbolsListActive);\n  }\n  componentDidMount() {\n    auth().then(() => this.getSymbolsListActive());\n    this.getSymbolsList().then(() => this.search(this.state.search));\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <p>{window.devicePixelRatio}</p>\n        <header className=\"App-header\">\n          <input className=\"search-bar\" type=\"text\" placeholder=\"Search\" value={this.state.search} onChange={this.search}/>\n          <ul className=\"search-options\">\n            {this.state.searchList.map(symbol => <li key={symbol}><button onMouseDown={() => this.tryToAddSymbolChart(symbol)}>{symbol}</button></li>).slice(0, 28)}\n          </ul>\n        </header>\n        <div className=\"charts-container\">\n          <Container onDrop={this.reorderCharts}>\n            {this.state.symbolsListActive.map(symbol => (\n              <Draggable key={symbol}>\n                <Stock symbol={symbol}/>\n              </Draggable>\n            ))}\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}